<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="slowSqlMillis" value="10000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="mysql" />
		<property name="config">
			<bean class="com.alibaba.druid.wall.WallConfig">
			</bean>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="filters" value="stat,log4j" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="wall-filter" />
			</list>
		</property>
		<property name="driverClassName" value="${jdbcDriver}" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${jdbcUser}" />
		<property name="password" value="${jdbcPassword}" />
		<property name="maxActive" value="${connectionPoolMaxSize}" />
		<property name="initialSize" value="${connectionPoolInitialSize}" />
		<property name="minIdle" value="${connectionPoolMinIdle}" />
		<property name="maxWait" value="${connectionPoolMaxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'z'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>

	<!-- 数据源事物管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- jdbc 模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="namedParameterjdbcTemplate"
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg index="0" ref="dataSource" />
	</bean>

	<!-- mybatis 配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
			<array>
				<value>classpath*:/**/*_mapper.xml</value>
				<value>classpath:**/*_mapper.xml</value>
				<value>classpath*:com/**/*_mapper.xml</value>
				<value>classpath*:org/**/*_mapper.xml</value>
			</array>
		</property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="roofDaoSupport" class="org.roof.dataaccess.RoofDaoSupport">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
		<!--<property name="idGenerator">
			<bean class="org.roof.idgenerator.RedisIdGenerator">
				<constructor-arg index="0" ref="redisTemplate" />
			</bean>
		</property>-->
	</bean>

	<bean id="pageQueryFactory" class="org.roof.dataaccess.DefaultPageQueryFactory">
		<property name="daoSupport" ref="roofDaoSupport" />
	</bean>


	<bean id="fastPageQueryFactory" class="org.roof.dataaccess.FastPageQueryFactory">
		<property name="daoSupport" ref="roofDaoSupport" />
	</bean>

</beans>